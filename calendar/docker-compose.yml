version: "3.3"

services:
  golang:
    build:
      context: ./
      dockerfile: deployments/config/goapp/Dockerfile
    container_name: golang
    ports:
      - '8080:8080'
      - '5001:5001'
    depends_on:
      - pgsql
      - redis
    networks:
      - internal
  prometheus:
    image: prom/prometheus:v2.1.0
    container_name: prometheus
    volumes:
      - ./deployments/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./deployments/data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks:
      - internal
  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - internal
    deploy:
      mode: global
  pgsql:
    image: postgres:alpine
    container_name: pgsql
    volumes:
      - ./deployments/data/postgres:/var/lib/postgresql/data postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: calendar
    networks:
      - internal
  migrate:
    image: migrate/migrate
    entrypoint: "migrate -database postgresql://root:root@pgsql/calendar?sslmode=disable -path /tmp/migrations"
    command: up
    links:
      - pgsql
    volumes:
      - ./migrations:/tmp/migrations
    networks:
      - internal
  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./deployments/data/redis:/var/lib/redis
      - ./deployments/config/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_REPLICATION_MODE=master
    networks:
      - internal
  grafana:
    image: grafana/grafana
    container_name: grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./deployments/data/grafana:/var/lib/grafana
      - ./deployments/config/grafana/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=foobar
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - internal
networks:
  internal:
    driver: bridge